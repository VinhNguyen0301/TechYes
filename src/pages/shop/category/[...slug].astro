---
/* SHOP ARCHIVE PAGES BY CATEGORY */
import { getEntry } from "astro:content";
import { getCollection } from "astro:content";
import PageLayoutArchive from "@layouts/PageLayoutArchive.astro";
import { getPagination, getCategoryData, slugify } from "@util/helpers";
import dataFromLocalJSON from "@data/products.json";
import dataFromShopJSON from "@data/shopConfig.json";
import supabase, { getProducts } from "@data/supabase";

export async function getStaticPaths({ paginate }) {
  // let posts = await getCollection("product");
  // console.log(JSON.stringify(posts));

  const dataFromSupabase = await getProducts();

  // console.log(dataFromSupabase);

  let posts: any[] = dataFromSupabase;

  posts
    // .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
    .filter((post) => !!post.data?.category);

  // const { data } = await getEntry("config", "shop");
  const allFilters = posts
    .map((post) => post.data.category)
    .filter((post) => !!post);

  const filters = [...new Set(allFilters.flat(1))];

  return getPagination(posts, filters, dataFromShopJSON, "category");
}
const base_url = import.meta.env.SHOP_SLUG;
const { lastPage, currentPage, page, filter, filters, filter_type } =
  Astro.props;
// let { data } = await getEntry("config", "shop");

/* GET HERO INFO FROM CONFIG */
// delete data.hero_buttons;
const pageData = getCategoryData(dataFromShopJSON.product_categories, filter);

if (pageData && !pageData.overwrite_style) delete pageData.style;
let data = {
  ...dataFromShopJSON,
  ...pageData,
};
---

<PageLayoutArchive
  page={{
    data: page,
    lastPage: lastPage,
    currentPage: currentPage,
  }}
  {filters}
  {filter}
  {filter_type}
  {data}
  {base_url}
/>

<code>
  <pre>
    {page[0]} - {lastPage} - {currentPage}
    <!-- {JSON.stringify(page[0], undefined, 1)} -->
  </pre>
</code>
