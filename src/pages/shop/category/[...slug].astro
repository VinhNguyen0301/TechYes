---
/* SHOP ARCHIVE PAGES BY CATEGORY */
import { getEntry } from "astro:content";
import { getCollection } from "astro:content";
import PageLayoutArchive from "@layouts/PageLayoutArchive.astro";
import { getPagination, getCategoryData, slugify } from "@util/helpers";
import dataFromLocalJSON from "@data/products.json";
import supabase, { getProducts } from "@data/supabase";

export async function getStaticPaths({ paginate }) {
  // let posts = await getCollection("product");
  // console.log(JSON.stringify(posts));

  const productData = await getProducts();

  // console.log(productData);

  let dataFromSupabase: any[] = [];

  if (productData) {
    dataFromSupabase = productData.map(
      ({
        ProductCode,
        ProductDescription,
        ProductCategory,
        ProductTitle,
        SortPrice,
        FeaturedImage,
        AllImages,
        CPURange,
        CPUCores,
        SocketType,
        Brand,
      }) => {
        return {
          id: ProductCode,
          slug: slugify(ProductTitle),
          body: "",
          collection: "product",
          data: {
            // title: ProductTitle,
            title: "",
            id: ProductCode,
            intro: `${ProductTitle}`,
            // intros: [SocketType, CPUCores],
            thumbnail: FeaturedImage,
            price: SortPrice,
            offer_price: 0,
            taxable: true,
            tax_included: false,
            in_stock: true,
            is_digital: false,
            shipping: { weight: 649 },
            category: ["Merch", "Style 2", "Style 3", ProductCategory],
            date: "2023-08-28T20:42:48.308Z",
            style: { container: "md" },
          },
        };
      },
    );
  }

  let posts: any[] = [...dataFromSupabase, ...dataFromLocalJSON];

  posts
    // .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
    .filter((post) => !!post.data?.category);

  const { data } = await getEntry("config", "shop");
  const allFilters = posts
    .map((post) => post.data.category)
    .filter((post) => !!post);

  const filters = [...new Set(allFilters.flat(1))];

  return getPagination(posts, filters, data, "category");
}
const base_url = import.meta.env.SHOP_SLUG;
const { lastPage, currentPage, page, filter, filters, filter_type } =
  Astro.props;
let { data } = await getEntry("config", "shop");

/* GET HERO INFO FROM CONFIG */
delete data.hero_buttons;
const pageData = getCategoryData(data.product_categories, filter);

if (pageData && !pageData.overwrite_style) delete pageData.style;
data = {
  ...data,
  ...pageData,
};
---

<PageLayoutArchive
  page={{
    data: page,
    lastPage: lastPage,
    currentPage: currentPage,
  }}
  {filters}
  {filter}
  {filter_type}
  {data}
  {base_url}
/>

<!-- <code>
  <pre
    class="w-full overflow-auto">
    {JSON.stringify(Astro.props, undefined, 1)}
  </pre>
</code> -->
