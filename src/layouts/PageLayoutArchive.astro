---
import { marked } from "marked";
import { getGridImageSizes } from "@util/helpers";
import PageLayoutWide from "@layouts/PageLayoutWide.astro";
import PageLayoutSplit from "@layouts/PageLayoutSplit.astro";
import Pager from "@components/navigation/Pager.astro";
import Intersecting from "@components/common/Intersecting.vue";
import ItemCard from "@components/cards/ItemCard.astro";
import ItemCardFlex from "@components/cards/ItemCardFlex.astro";
import ItemCardSmall from "@components/cards/ItemCardSmall.astro";
import { slugify } from "@util/helpers";
import ProductPrice from "@components/shop/ProductPrice.vue";
import ProductListing from "@components/shop/ProductListing.vue";

const { data, page, filters, base_url, filter, filter_type, tag } = Astro.props;
const style = data?.style ? data.style : page.data.style;
const sizes = getGridImageSizes(data?.style?.container || "md");
const template = style?.template ? data.style.template : "split";
const pagerSlug = `${base_url}/${filter_type}/${slugify(filter)}`;

const productWrapClass = () => {
  if (style.card_template === "grid")
    return `grid auto-grid-${data.style.container} gap-4 pb-32`;
  if (style.hero_template === "image")
    return `flex flex-wrap justify-center pt-14 pb-20 flex-grid gap-x-4 gap-y-12`;
  // return `flex flex-wrap gap-x-4 gap-y-12 justify-center pb-32 flex-grid `;
  return `flex flex-wrap gap-x-4 gap-y-12 justify-start flex-grid `;
  // return `grid gap-x-4 gap-y-12  pb-32 custom-grid`;
};
---

<!-- {template} -->{page.data.count}
{
  template === "full" && (
    <PageLayoutWide
      {...page}
      {...data}
      {filters}
      {filter}
      {filter_type}
      {base_url}
      {tag}
    >
      <section data-pagefind-ignore="all">
        <ProductListing
          productWrapClass={productWrapClass()}
          noSsr={false}
          client:load
        >
          {page.data.map((post) => (
            <li class="custom-grid-item" slot="default-product-listing">
              <Intersecting client:visible>
                {style.card_template === "grid" && (
                  <ItemCard content={post} {base_url} {sizes} animate={true} />
                )}
                {style.card_template === "flex" && (
                  <div class="card-wrapper">
                    <ItemCardFlex content={post} {base_url} animate={true} />
                  </div>
                )}
              </Intersecting>
            </li>
          ))}

          {page.lastPage > 1 && (
            <div slot="default-pagination">
              <Pager
                totalPage={page.lastPage}
                currentPage={page.currentPage}
                url={pagerSlug}
              />
            </div>
          )}
        </ProductListing>
      </section>
    </PageLayoutWide>
  )
}

<style lang="postcss">

  
	ul.bloglist {
		width: calc(100% + var(--container-spacing));
		margin-left: calc(var(--spacing) * -1);
		@screen sm {  
			width: 100%;
			margin-left: 0;                      
		}
	}
	.flex-grid {
		li {
			/* @apply flex-1 flex justify-center; */
			@apply flex justify-center;
		}
	}


</style>
