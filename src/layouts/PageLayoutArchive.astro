---
import { marked } from "marked";
import { getGridImageSizes } from "@util/helpers";
import PageLayoutWide from "@layouts/PageLayoutWide.astro";
import PageLayoutSplit from "@layouts/PageLayoutSplit.astro";
import Pager from "@components/navigation/Pager.astro";
import Intersecting from "@components/common/Intersecting.vue";
import ItemCard from "@components/cards/ItemCard.astro";
import ItemCardFlex from "@components/cards/ItemCardFlex.astro";
import ItemCardSmall from "@components/cards/ItemCardSmall.astro";
import { slugify } from "@util/helpers";

const { data, page, filters, base_url, filter, filter_type, tag } = Astro.props;
const style = data?.style ? data.style : page.data.style;
const sizes = getGridImageSizes(data?.style?.container || "md");
const template = style?.template ? data.style.template : "split";
const pagerSlug = `${base_url}/${filter_type}/${slugify(filter)}`;

const productWrapClass = () => {
  if (style.card_template === "grid")
    return `grid auto-grid-${data.style.container} gap-4 pb-32`;
  if (style.hero_template === "image")
    return `flex flex-wrap justify-center pt-14 pb-20 flex-grid gap-x-4 gap-y-8`;
  // return `flex flex-wrap gap-x-4 gap-y-8 justify-center pb-32 flex-grid `;
  return `flex flex-wrap gap-x-4 gap-y-8 justify-center pb-32 flex-grid `;
  // return `grid gap-x-4 gap-y-8  pb-32 custom-grid`;
};
---

<!-- {template} -->{page.data.count}
{
  template === "full" && (
    <PageLayoutWide
      {...page}
      {...data}
      {filters}
      {filter}
      {filter_type}
      {base_url}
      {tag}
    >
      {data.body && data.body !== "" && (
        <section class={` ${data.style.content_class || "pb-14"}`}>
          <div
            class={`richtext container-${data.style.container}`}
            set:html={marked.parse(data.body)}
          />
        </section>
      )}

      <section data-pagefind-ignore="all">
        <ul class={`${productWrapClass()}`}>
          {page.data.map((post) => (
            <li class="custom-grid-item">
              <Intersecting client:visible>
                {style.card_template === "grid" && (
                  <ItemCard content={post} {base_url} {sizes} animate={true} />
                )}
                {style.card_template === "flex" && (
                  <ItemCardFlex content={post} {base_url} animate={true} />
                )}
              </Intersecting>
            </li>
          ))}
        </ul>
        {style.card_template}
        {page.lastPage > 1 && (
          <div class="container-md pb-4">
            <Pager
              totalPage={page.lastPage}
              currentPage={page.currentPage}
              url={pagerSlug}
            />
          </div>
        )}
      </section>
    </PageLayoutWide>
  )
}

<style lang="postcss">
	ul.bloglist {
		width: calc(100% + var(--container-spacing));
		margin-left: calc(var(--spacing) * -1);
		@screen sm {  
			width: 100%;
			margin-left: 0;                      
		}
	}
	.flex-grid {
		li {
			/* @apply flex-1 flex justify-center; */
			@apply basis-[248px] flex justify-center;
		}
	}
</style>
